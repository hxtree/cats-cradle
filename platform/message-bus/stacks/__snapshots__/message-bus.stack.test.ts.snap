// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MessageBusStack should match snapshot test 1`] = `
{
  Parameters: {
    BootstrapVersion: {
      Default: /cdk-bootstrap/hnb659fds/version,
      Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip],
      Type: AWS::SSM::Parameter::Value<String>,
    },
  },
  Resources: {
    CharacterLevelUpEventEE3941E0: {
      Properties: {
        DisplayName: DefaultCharacterLevelUpEventTopic,
        FifoTopic: false,
        TopicName: default-character-level-up-event-topic,
      },
      Type: AWS::SNS::Topic,
    },
    DataLakeFirehoseDeliveryStream: {
      Properties: {
        DeliveryStreamName: test-firehose-delivery-stream,
        DeliveryStreamType: DirectPut,
        S3DestinationConfiguration: {
          BucketARN: {
            Fn::GetAtt: [
              defaultdatalake9656A812,
              Arn,
            ],
          },
          BufferingHints: {
            IntervalInSeconds: 60,
            SizeInMBs: 1,
          },
          CompressionFormat: UNCOMPRESSED,
          EncryptionConfiguration: {
            NoEncryptionConfig: NoEncryption,
          },
          ErrorOutputPrefix: messages-logs/,
          Prefix: messages/,
          RoleARN: {
            Fn::GetAtt: [
              KinesisFirehoseRole0891766E,
              Arn,
            ],
          },
        },
      },
      Type: AWS::KinesisFirehose::DeliveryStream,
    },
    DataLakeFirehoseSubscriptionForCharacterLevelUpEvent36356735: {
      Properties: {
        Endpoint: {
          Fn::GetAtt: [
            DataLakeFirehoseDeliveryStream,
            Arn,
          ],
        },
        Protocol: firehose,
        RawMessageDelivery: true,
        SubscriptionRoleArn: {
          Fn::GetAtt: [
            SnsRoleToPutMessagesInFirehose73474B02,
            Arn,
          ],
        },
        TopicArn: {
          Ref: CharacterLevelUpEventEE3941E0,
        },
      },
      Type: AWS::SNS::Subscription,
    },
    DataLakeFirehoseSubscriptionForEmailSendCommand6B92740C: {
      Properties: {
        Endpoint: {
          Fn::GetAtt: [
            DataLakeFirehoseDeliveryStream,
            Arn,
          ],
        },
        Protocol: firehose,
        RawMessageDelivery: true,
        SubscriptionRoleArn: {
          Fn::GetAtt: [
            SnsRoleToPutMessagesInFirehose73474B02,
            Arn,
          ],
        },
        TopicArn: {
          Ref: EmailSendCommand52EDF753,
        },
      },
      Type: AWS::SNS::Subscription,
    },
    DataLakeFirehoseSubscriptionForItemDestroyCommand1F71CBDC: {
      Properties: {
        Endpoint: {
          Fn::GetAtt: [
            DataLakeFirehoseDeliveryStream,
            Arn,
          ],
        },
        Protocol: firehose,
        RawMessageDelivery: true,
        SubscriptionRoleArn: {
          Fn::GetAtt: [
            SnsRoleToPutMessagesInFirehose73474B02,
            Arn,
          ],
        },
        TopicArn: {
          Ref: ItemDestroyCommand739F092B,
        },
      },
      Type: AWS::SNS::Subscription,
    },
    EmailSendCommand52EDF753: {
      Properties: {
        DisplayName: DefaultEmailSendCommandTopic,
        FifoTopic: false,
        TopicName: default-email-send-command-topic,
      },
      Type: AWS::SNS::Topic,
    },
    ItemDestroyCommand739F092B: {
      Properties: {
        DisplayName: DefaultItemDestroyCommandTopic,
        FifoTopic: false,
        TopicName: default-item-destroy-command-topic,
      },
      Type: AWS::SNS::Topic,
    },
    KinesisFirehoseRole0891766E: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: firehose.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    KinesisFirehoseRoleDefaultPolicy9DF4ED0B: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::GetAtt: [
                    defaultdatalake9656A812,
                    Arn,
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      {
                        Fn::GetAtt: [
                          defaultdatalake9656A812,
                          Arn,
                        ],
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: KinesisFirehoseRoleDefaultPolicy9DF4ED0B,
        Roles: [
          {
            Ref: KinesisFirehoseRole0891766E,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    SnsRoleToPutMessagesInFirehose73474B02: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: sns.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
        ManagedPolicyArns: [
          {
            Fn::Join: [
              ,
              [
                arn:,
                {
                  Ref: AWS::Partition,
                },
                :iam::aws:policy/service-role/AmazonSNSRole,
              ],
            ],
          },
        ],
      },
      Type: AWS::IAM::Role,
    },
    SnsRoleToPutMessagesInFirehoseDefaultPolicyECC99DF6: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                firehose:DescribeDeliveryStream,
                firehose:ListDeliveryStreams,
                firehose:ListTagsForDeliveryStream,
                firehose:PutRecord,
                firehose:PutRecordBatch,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:aws:firehose:,
                    {
                      Ref: AWS::Region,
                    },
                    :,
                    {
                      Ref: AWS::AccountId,
                    },
                    :deliverystream/*,
                  ],
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: SnsRoleToPutMessagesInFirehoseDefaultPolicyECC99DF6,
        Roles: [
          {
            Ref: SnsRoleToPutMessagesInFirehose73474B02,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    defaultdatalake9656A812: {
      DeletionPolicy: Retain,
      Properties: {
        BucketEncryption: {
          ServerSideEncryptionConfiguration: [
            {
              ServerSideEncryptionByDefault: {
                SSEAlgorithm: AES256,
              },
            },
          ],
        },
        BucketName: {
          Fn::Join: [
            ,
            [
              {
                Ref: AWS::AccountId,
              },
              -default-data-lake-bucket,
            ],
          ],
        },
        PublicAccessBlockConfiguration: {
          BlockPublicAcls: true,
          BlockPublicPolicy: true,
          IgnorePublicAcls: true,
          RestrictPublicBuckets: true,
        },
        VersioningConfiguration: {
          Status: Enabled,
        },
      },
      Type: AWS::S3::Bucket,
      UpdateReplacePolicy: Retain,
    },
    defaultdatalakePolicy79F9292D: {
      Properties: {
        Bucket: {
          Ref: defaultdatalake9656A812,
        },
        PolicyDocument: {
          Statement: [
            {
              Action: s3:*,
              Condition: {
                Bool: {
                  aws:SecureTransport: false,
                },
              },
              Effect: Deny,
              Principal: {
                AWS: *,
              },
              Resource: [
                {
                  Fn::GetAtt: [
                    defaultdatalake9656A812,
                    Arn,
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      {
                        Fn::GetAtt: [
                          defaultdatalake9656A812,
                          Arn,
                        ],
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::S3::BucketPolicy,
    },
  },
  Rules: {
    CheckBootstrapVersion: {
      Assertions: [
        {
          Assert: {
            Fn::Not: [
              {
                Fn::Contains: [
                  [
                    1,
                    2,
                    3,
                    4,
                    5,
                  ],
                  {
                    Ref: BootstrapVersion,
                  },
                ],
              },
            ],
          },
          AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.,
        },
      ],
    },
  },
}
`;
