// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HtmlToPdfStack should match snapshot test 1`] = `
{
  Outputs: {
    exampletestendpoint: {
      Value: {
        Fn::Join: [
          ,
          [
            https://,
            {
              Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointcustomdomain808804C4,
            },
            /pdf?url=https://google.com,
          ],
        ],
      },
    },
    healthcheckendpoint: {
      Value: {
        Fn::Join: [
          ,
          [
            https://,
            {
              Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointcustomdomain808804C4,
            },
            /health,
          ],
        ],
      },
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiEndpoint26E247D6: {
      Value: {
        Fn::Join: [
          ,
          [
            https://,
            {
              Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi1B430203,
            },
            .execute-api.,
            {
              Ref: AWS::Region,
            },
            .,
            {
              Ref: AWS::URLSuffix,
            },
            /,
            {
              Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiDeploymentStageprod256692E7,
            },
            /,
          ],
        ],
      },
    },
  },
  Parameters: {
    BootstrapVersion: {
      Default: /cdk-bootstrap/hnb659fds/version,
      Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip],
      Type: AWS::SSM::Parameter::Value<String>,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointhostedzoneidParameter400E20C0: {
      Default: my-domains-hosted-zone-id,
      Type: AWS::SSM::Parameter::Value<String>,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointorgformationcertswildcardcert1arnParameter1AF8E75E: {
      Default: orgformation-certs-wildcard-cert1-arn,
      Type: AWS::SSM::Parameter::Value<String>,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointssmdomainnameParameterD95B813B: {
      Default: DOMAIN_NAME,
      Type: AWS::SSM::Parameter::Value<String>,
    },
    lambdalayernestjslatestversionssmParameter: {
      Default: lambda-layer-nestjs-latest-version,
      Type: AWS::SSM::Parameter::Value<String>,
    },
    mongodatabasepasswordssmParameter: {
      Default: MONGO_DATABASE_PASSWORD,
      Type: AWS::SSM::Parameter::Value<String>,
    },
    mongodatabaseurissmParameter: {
      Default: MONGO_DATABASE_URI,
      Type: AWS::SSM::Parameter::Value<String>,
    },
    mongodatabaseuserssmParameter: {
      Default: MONGO_DATABASE_USER,
      Type: AWS::SSM::Parameter::Value<String>,
    },
  },
  Resources: {
    ChromiumLayer505381F6: {
      Properties: {
        CompatibleRuntimes: [
          nodejs18.x,
        ],
        Content: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region},
          },
          S3Key: UNIQUE_HASH.zip,
        },
        Description: Chromium layer for Lambda,
        LayerName: ChromiumLayer,
      },
      Type: AWS::Lambda::LayerVersion,
    },
    LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A: {
      DependsOn: [
        LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB,
        LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB,
      ],
      Properties: {
        Code: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region},
          },
          S3Key: UNIQUE_HASH.zip,
        },
        Handler: index.handler,
        Role: {
          Fn::GetAtt: [
            LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB,
            Arn,
          ],
        },
        Runtime: nodejs18.x,
        Timeout: 900,
      },
      Type: AWS::Lambda::Function,
    },
    LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: lambda.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
        ManagedPolicyArns: [
          {
            Fn::Join: [
              ,
              [
                arn:,
                {
                  Ref: AWS::Partition,
                },
                :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole,
              ],
            ],
          },
        ],
      },
      Type: AWS::IAM::Role,
    },
    LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                logs:PutRetentionPolicy,
                logs:DeleteRetentionPolicy,
              ],
              Effect: Allow,
              Resource: *,
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB,
        Roles: [
          {
            Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointapigatewayaliasrecord366F7DAC: {
      Properties: {
        AliasTarget: {
          DNSName: {
            Fn::GetAtt: [
              htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointcustomdomain808804C4,
              RegionalDomainName,
            ],
          },
          HostedZoneId: {
            Fn::GetAtt: [
              htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointcustomdomain808804C4,
              RegionalHostedZoneId,
            ],
          },
        },
        HostedZoneId: {
          Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointhostedzoneidParameter400E20C0,
        },
        Name: {
          Fn::Join: [
            ,
            [
              html-to-pdf.,
              {
                Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointssmdomainnameParameterD95B813B,
              },
              .,
            ],
          ],
        },
        Type: A,
      },
      Type: AWS::Route53::RecordSet,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointapistage8C7F5C96: {
      DependsOn: [
        htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiAccountED1DC265,
      ],
      Properties: {
        DeploymentId: {
          Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointdeployment_UNIQUE_HASH,
        },
        RestApiId: {
          Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi1B430203,
        },
        StageName: default,
      },
      Type: AWS::ApiGateway::Stage,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointcustomdomain808804C4: {
      Properties: {
        DomainName: {
          Fn::Join: [
            ,
            [
              html-to-pdf.,
              {
                Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointssmdomainnameParameterD95B813B,
              },
            ],
          ],
        },
        EndpointConfiguration: {
          Types: [
            REGIONAL,
          ],
        },
        RegionalCertificateArn: {
          Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointorgformationcertswildcardcert1arnParameter1AF8E75E,
        },
        SecurityPolicy: TLS_1_2,
      },
      Type: AWS::ApiGateway::DomainName,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointcustomdomainMapMyTestStackhtmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi730DB893D68EDB9C: {
      Properties: {
        DomainName: {
          Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointcustomdomain808804C4,
        },
        RestApiId: {
          Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi1B430203,
        },
        Stage: {
          Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiDeploymentStageprod256692E7,
        },
      },
      Type: AWS::ApiGateway::BasePathMapping,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointdeployment_UNIQUE_HASH: {
      DependsOn: [
        htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiproxyANY05444A22,
        htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiANY4A812312,
      ],
      Properties: {
        RestApiId: {
          Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi1B430203,
        },
      },
      Type: AWS::ApiGateway::Deployment,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointhtmltopdfsvcdomainnameEB41BF7D: {
      Properties: {
        Description: html-to-pdf service domain name,
        Name: HTML_TO_PDF_SVC_DOMAIN_NAME,
        Type: String,
        Value: {
          Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointcustomdomain808804C4,
        },
      },
      Type: AWS::SSM::Parameter,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi1B430203: {
      Properties: {
        Description: html-to-pdf Service API Gateway,
        Name: html-to-pdf RestAPI,
      },
      Type: AWS::ApiGateway::RestApi,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiANY4A812312: {
      Properties: {
        AuthorizationType: NONE,
        HttpMethod: ANY,
        Integration: {
          IntegrationHttpMethod: POST,
          Type: AWS_PROXY,
          Uri: {
            Fn::Join: [
              ,
              [
                arn:,
                {
                  Ref: AWS::Partition,
                },
                :apigateway:,
                {
                  Ref: AWS::Region,
                },
                :lambda:path/2015-03-31/functions/,
                {
                  Fn::GetAtt: [
                    htmltopdfstacknestjsNodeJsLambda82EBD38C,
                    Arn,
                  ],
                },
                /invocations,
              ],
            ],
          },
        },
        ResourceId: {
          Fn::GetAtt: [
            htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi1B430203,
            RootResourceId,
          ],
        },
        RestApiId: {
          Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi1B430203,
        },
      },
      Type: AWS::ApiGateway::Method,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiANYApiPermissionMyTestStackhtmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi730DB893ANYCDC44113: {
      Properties: {
        Action: lambda:InvokeFunction,
        FunctionName: {
          Fn::GetAtt: [
            htmltopdfstacknestjsNodeJsLambda82EBD38C,
            Arn,
          ],
        },
        Principal: apigateway.amazonaws.com,
        SourceArn: {
          Fn::Join: [
            ,
            [
              arn:,
              {
                Ref: AWS::Partition,
              },
              :execute-api:,
              {
                Ref: AWS::Region,
              },
              :,
              {
                Ref: AWS::AccountId,
              },
              :,
              {
                Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi1B430203,
              },
              /,
              {
                Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiDeploymentStageprod256692E7,
              },
              /*/,
            ],
          ],
        },
      },
      Type: AWS::Lambda::Permission,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiANYApiPermissionTestMyTestStackhtmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi730DB893ANY1A7339A0: {
      Properties: {
        Action: lambda:InvokeFunction,
        FunctionName: {
          Fn::GetAtt: [
            htmltopdfstacknestjsNodeJsLambda82EBD38C,
            Arn,
          ],
        },
        Principal: apigateway.amazonaws.com,
        SourceArn: {
          Fn::Join: [
            ,
            [
              arn:,
              {
                Ref: AWS::Partition,
              },
              :execute-api:,
              {
                Ref: AWS::Region,
              },
              :,
              {
                Ref: AWS::AccountId,
              },
              :,
              {
                Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi1B430203,
              },
              /test-invoke-stage/*/,
            ],
          ],
        },
      },
      Type: AWS::Lambda::Permission,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiAccountED1DC265: {
      DeletionPolicy: Retain,
      DependsOn: [
        htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi1B430203,
      ],
      Properties: {
        CloudWatchRoleArn: {
          Fn::GetAtt: [
            htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiCloudWatchRole36037177,
            Arn,
          ],
        },
      },
      Type: AWS::ApiGateway::Account,
      UpdateReplacePolicy: Retain,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiCloudWatchRole36037177: {
      DeletionPolicy: Retain,
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: apigateway.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
        ManagedPolicyArns: [
          {
            Fn::Join: [
              ,
              [
                arn:,
                {
                  Ref: AWS::Partition,
                },
                :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs,
              ],
            ],
          },
        ],
      },
      Type: AWS::IAM::Role,
      UpdateReplacePolicy: Retain,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiDeploymentDAC5D5D3bb7a2011d30d6d63955698ae6b66043e: {
      DependsOn: [
        htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiproxyANY05444A22,
        htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiproxyB06587AE,
        htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiANY4A812312,
      ],
      Properties: {
        Description: html-to-pdf Service API Gateway,
        RestApiId: {
          Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi1B430203,
        },
      },
      Type: AWS::ApiGateway::Deployment,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiDeploymentStageprod256692E7: {
      DependsOn: [
        htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiAccountED1DC265,
      ],
      Properties: {
        DeploymentId: {
          Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiDeploymentDAC5D5D3bb7a2011d30d6d63955698ae6b66043e,
        },
        MethodSettings: [
          {
            DataTraceEnabled: false,
            HttpMethod: *,
            ResourcePath: /*,
            ThrottlingBurstLimit: 10,
            ThrottlingRateLimit: 10,
          },
        ],
        RestApiId: {
          Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi1B430203,
        },
        StageName: prod,
      },
      Type: AWS::ApiGateway::Stage,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiproxyANY05444A22: {
      Properties: {
        AuthorizationType: NONE,
        HttpMethod: ANY,
        Integration: {
          IntegrationHttpMethod: POST,
          Type: AWS_PROXY,
          Uri: {
            Fn::Join: [
              ,
              [
                arn:,
                {
                  Ref: AWS::Partition,
                },
                :apigateway:,
                {
                  Ref: AWS::Region,
                },
                :lambda:path/2015-03-31/functions/,
                {
                  Fn::GetAtt: [
                    htmltopdfstacknestjsNodeJsLambda82EBD38C,
                    Arn,
                  ],
                },
                /invocations,
              ],
            ],
          },
        },
        ResourceId: {
          Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiproxyB06587AE,
        },
        RestApiId: {
          Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi1B430203,
        },
      },
      Type: AWS::ApiGateway::Method,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiproxyANYApiPermissionMyTestStackhtmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi730DB893ANYproxyEEAA420F: {
      Properties: {
        Action: lambda:InvokeFunction,
        FunctionName: {
          Fn::GetAtt: [
            htmltopdfstacknestjsNodeJsLambda82EBD38C,
            Arn,
          ],
        },
        Principal: apigateway.amazonaws.com,
        SourceArn: {
          Fn::Join: [
            ,
            [
              arn:,
              {
                Ref: AWS::Partition,
              },
              :execute-api:,
              {
                Ref: AWS::Region,
              },
              :,
              {
                Ref: AWS::AccountId,
              },
              :,
              {
                Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi1B430203,
              },
              /,
              {
                Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiDeploymentStageprod256692E7,
              },
              /*/*,
            ],
          ],
        },
      },
      Type: AWS::Lambda::Permission,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiproxyANYApiPermissionTestMyTestStackhtmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi730DB893ANYproxyEA6B4324: {
      Properties: {
        Action: lambda:InvokeFunction,
        FunctionName: {
          Fn::GetAtt: [
            htmltopdfstacknestjsNodeJsLambda82EBD38C,
            Arn,
          ],
        },
        Principal: apigateway.amazonaws.com,
        SourceArn: {
          Fn::Join: [
            ,
            [
              arn:,
              {
                Ref: AWS::Partition,
              },
              :execute-api:,
              {
                Ref: AWS::Region,
              },
              :,
              {
                Ref: AWS::AccountId,
              },
              :,
              {
                Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi1B430203,
              },
              /test-invoke-stage/*/*,
            ],
          ],
        },
      },
      Type: AWS::Lambda::Permission,
    },
    htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapiproxyB06587AE: {
      Properties: {
        ParentId: {
          Fn::GetAtt: [
            htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi1B430203,
            RootResourceId,
          ],
        },
        PathPart: {proxy+},
        RestApiId: {
          Ref: htmltopdfstackhtmltopdfstackapiendpointhtmltopdfstackapiendpointrestapi1B430203,
        },
      },
      Type: AWS::ApiGateway::Resource,
    },
    htmltopdfstacknestjsNodeJsLambda82EBD38C: {
      DependsOn: [
        htmltopdfstacknestjsNodeJsLambdaServiceRole59DBD5B4,
      ],
      Properties: {
        Code: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region},
          },
          S3Key: UNIQUE_HASH.zip,
        },
        Environment: {
          Variables: {
            AWS_ACCOUNT_ID: {
              Ref: AWS::AccountId,
            },
            MONGO_DATABASE_PASSWORD: {
              Ref: mongodatabasepasswordssmParameter,
            },
            MONGO_DATABASE_URI: {
              Ref: mongodatabaseurissmParameter,
            },
            MONGO_DATABASE_USER: {
              Ref: mongodatabaseuserssmParameter,
            },
            STAGE_NAME: default,
          },
        },
        Handler: index.handler,
        Layers: [
          {
            Ref: ChromiumLayer505381F6,
          },
          {
            Ref: lambdalayernestjslatestversionssmParameter,
          },
        ],
        MemorySize: 1600,
        Role: {
          Fn::GetAtt: [
            htmltopdfstacknestjsNodeJsLambdaServiceRole59DBD5B4,
            Arn,
          ],
        },
        Runtime: nodejs18.x,
        Timeout: 30,
      },
      Type: AWS::Lambda::Function,
    },
    htmltopdfstacknestjsNodeJsLambdaLogRetention0C09778D: {
      Properties: {
        LogGroupName: {
          Fn::Join: [
            ,
            [
              /aws/lambda/,
              {
                Ref: htmltopdfstacknestjsNodeJsLambda82EBD38C,
              },
            ],
          ],
        },
        RetentionInDays: 1,
        ServiceToken: {
          Fn::GetAtt: [
            LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A,
            Arn,
          ],
        },
      },
      Type: Custom::LogRetention,
    },
    htmltopdfstacknestjsNodeJsLambdaServiceRole59DBD5B4: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: lambda.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
        ManagedPolicyArns: [
          {
            Fn::Join: [
              ,
              [
                arn:,
                {
                  Ref: AWS::Partition,
                },
                :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole,
              ],
            ],
          },
        ],
      },
      Type: AWS::IAM::Role,
    },
  },
  Rules: {
    CheckBootstrapVersion: {
      Assertions: [
        {
          Assert: {
            Fn::Not: [
              {
                Fn::Contains: [
                  [
                    1,
                    2,
                    3,
                    4,
                    5,
                  ],
                  {
                    Ref: BootstrapVersion,
                  },
                ],
              },
            ],
          },
          AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.,
        },
      ],
    },
  },
}
`;
