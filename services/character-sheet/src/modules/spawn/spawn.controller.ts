import {
  Controller,
  Post,
  Body,
  VERSION_NEUTRAL,
  BadRequestException,
} from '@nestjs/common';
import { CharacterSheetRepository } from '../character-sheet/character-sheet.repository';
import { CharacterSheetService } from '../character-sheet/character-sheet.service';
import { CharacterSheet } from '../character-sheet/character-sheet.schema';
import { CreateSpawnDto } from './create-spawn-dto';
import { PlaceService } from '../place/place.service';
import { SpawnService } from './spawn.service';

@Controller({ path: 'spawns', version: [VERSION_NEUTRAL, '1'] })
export class SpawnController {
  constructor(
    private _characterSheetService: CharacterSheetService,
    private _characterSheetRepository: CharacterSheetRepository,
    private _placeService: PlaceService,
    private _spawnService: SpawnService,
  ) {}

  /**
   * Endpoint to dynamically autogenerated for in a given area
   */
  @Post()
  async create(@Body() createSpawnDto: CreateSpawnDto): Promise<any> {
    const place = await this._placeService.find(createSpawnDto.place);

    if (!place.spawnGuidelines) {
      return new BadRequestException('Spawn guidelines not found');
    }

    const createCharacterSheet = this._spawnService.calculateSpawn(
      place.spawnGuidelines,
    );
    createCharacterSheet.id = createSpawnDto.id;

    const characterSheet = new CharacterSheet(createCharacterSheet);

    // TODO persist character

    return this._characterSheetRepository.create(characterSheet);
  }
}
