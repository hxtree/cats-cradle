"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = void 0;
const Turn_1 = require("./Turn");
const handler = async (event, context) => {
    console.log("request:", JSON.stringify(event, undefined, 2));
    console.log("context:", JSON.stringify(context, undefined, 2));
    if (event.queryStringParameters === null) {
        return {
            statusCode: 200,
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                message: 'notation and luck required'
            })
        };
    }
    const notation = event.queryStringParameters?.notation ?? 'd6';
    const luck = Number(event.queryStringParameters?.luck) ?? 0;
    const turn = new Turn_1.Turn(notation, luck);
    return {
        statusCode: 200,
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            message: 'Success',
            data: {
                total: turn.roll(),
                luck: turn.luck.value,
                min: turn.minPotential(),
                max: turn.maxPotential(),
                bonus: turn.extraBonus
            }
        })
    };
};
exports.handler = handler;
exports.default = exports.handler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9IYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQU1FLGlDQUE0QjtBQUlyQixNQUFNLE9BQU8sR0FBaUIsS0FBSyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsRUFBRTtJQUM1RCxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM3RCxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMvRCxJQUFHLEtBQUssQ0FBQyxxQkFBcUIsS0FBSyxJQUFJLEVBQUM7UUFDbEMsT0FBTztZQUNILFVBQVUsRUFBRSxHQUFHO1lBQ2YsT0FBTyxFQUFFO2dCQUNMLGNBQWMsRUFBRSxrQkFBa0I7YUFDckM7WUFDRCxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQztnQkFDakIsT0FBTyxFQUFFLDRCQUE0QjthQUN4QyxDQUFDO1NBQ0wsQ0FBQztLQUNMO0lBRUQsTUFBTSxRQUFRLEdBQUcsS0FBSyxDQUFDLHFCQUFxQixFQUFFLFFBQVEsSUFBSSxJQUFJLENBQUM7SUFDL0QsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxxQkFBcUIsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDNUQsTUFBTSxJQUFJLEdBQUcsSUFBSSxXQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBRXRDLE9BQU87UUFDSCxVQUFVLEVBQUUsR0FBRztRQUNmLE9BQU8sRUFBRTtZQUNMLGNBQWMsRUFBRSxrQkFBa0I7U0FDckM7UUFDRCxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUNqQixPQUFPLEVBQUUsU0FBUztZQUNsQixJQUFJLEVBQUU7Z0JBQ0YsS0FBSyxFQUFFLElBQUksQ0FBQyxJQUFJLEVBQUU7Z0JBQ2xCLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUs7Z0JBQ3JCLEdBQUcsRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFO2dCQUN4QixHQUFHLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRTtnQkFDeEIsS0FBSyxFQUFFLElBQUksQ0FBQyxVQUFVO2FBQ3pCO1NBQ0osQ0FBQztLQUNMLENBQUM7QUFDTixDQUFDLENBQUM7QUFuQ1csUUFBQSxPQUFPLFdBbUNsQjtBQUVGLGtCQUFlLGVBQU8sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQVBJR2F0ZXdheVByb3h5RXZlbnRWMixcbiAgICBBUElHYXRld2F5UHJveHlSZXN1bHRWMixcbiAgICBIYW5kbGVyLFxuICB9IGZyb20gJ2F3cy1sYW1iZGEnO1xuICBcbiAgaW1wb3J0IHtUdXJufSBmcm9tICcuL1R1cm4nO1xuICBcbiAgZXhwb3J0IHR5cGUgUHJveHlIYW5kbGVyID0gSGFuZGxlcjxBUElHYXRld2F5UHJveHlFdmVudFYyLCBBUElHYXRld2F5UHJveHlSZXN1bHRWMj5cbiAgXG4gIGV4cG9ydCBjb25zdCBoYW5kbGVyOiBQcm94eUhhbmRsZXIgPSBhc3luYyAoZXZlbnQsIGNvbnRleHQpID0+IHtcbiAgICBjb25zb2xlLmxvZyhcInJlcXVlc3Q6XCIsIEpTT04uc3RyaW5naWZ5KGV2ZW50LCB1bmRlZmluZWQsIDIpKTtcbiAgICBjb25zb2xlLmxvZyhcImNvbnRleHQ6XCIsIEpTT04uc3RyaW5naWZ5KGNvbnRleHQsIHVuZGVmaW5lZCwgMikpO1xuICAgIGlmKGV2ZW50LnF1ZXJ5U3RyaW5nUGFyYW1ldGVycyA9PT0gbnVsbCl7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgc3RhdHVzQ29kZTogMjAwLFxuICAgICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdub3RhdGlvbiBhbmQgbHVjayByZXF1aXJlZCdcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICB9O1xuICAgICAgfVxuICBcbiAgICAgIGNvbnN0IG5vdGF0aW9uID0gZXZlbnQucXVlcnlTdHJpbmdQYXJhbWV0ZXJzPy5ub3RhdGlvbiA/PyAnZDYnO1xuICAgICAgY29uc3QgbHVjayA9IE51bWJlcihldmVudC5xdWVyeVN0cmluZ1BhcmFtZXRlcnM/Lmx1Y2spID8/IDA7XG4gICAgICBjb25zdCB0dXJuID0gbmV3IFR1cm4obm90YXRpb24sIGx1Y2spO1xuICAgICAgXG4gICAgICByZXR1cm4ge1xuICAgICAgICAgIHN0YXR1c0NvZGU6IDIwMCxcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgICAgICB9LFxuICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgbWVzc2FnZTogJ1N1Y2Nlc3MnLFxuICAgICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgICB0b3RhbDogdHVybi5yb2xsKCksXG4gICAgICAgICAgICAgICAgICBsdWNrOiB0dXJuLmx1Y2sudmFsdWUsXG4gICAgICAgICAgICAgICAgICBtaW46IHR1cm4ubWluUG90ZW50aWFsKCksXG4gICAgICAgICAgICAgICAgICBtYXg6IHR1cm4ubWF4UG90ZW50aWFsKCksXG4gICAgICAgICAgICAgICAgICBib251czogdHVybi5leHRyYUJvbnVzXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgfTtcbiAgfTtcblxuICBleHBvcnQgZGVmYXVsdCBoYW5kbGVyOyJdfQ==