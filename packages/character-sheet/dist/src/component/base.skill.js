"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SkillCategory = void 0;
const class_skill_1 = require("./class.skill");
const combo_skill_1 = require("./combo.skill");
const drive_skill_1 = require("./drive.skill");
const interaction_skill_1 = require("./interaction.skill");
const item_skill_1 = require("./item.skill");
const passive_skill_1 = require("./passive.skill");
const spell_skill_1 = require("./spell.skill");
const summon_skill_1 = require("./summon.skill");
const teamwork_skill_1 = require("./teamwork.skill");
const tool_skill_1 = require("./tool.skill");
const trap_skill_1 = require("./trap.skill");
const weapon_skill_1 = require("./weapon.skill");
const MasterSkillList = {
    ...weapon_skill_1.WeaponSkillList,
    ...trap_skill_1.TrapSkillList,
    ...class_skill_1.ClassSkillList,
    ...drive_skill_1.DriveSkillList,
    ...combo_skill_1.ComboSkillList,
    ...spell_skill_1.SpellSkillList,
    ...teamwork_skill_1.TeamworkSkillList,
    ...passive_skill_1.PassiveSkillList,
    ...item_skill_1.ItemSkillList,
    ...interaction_skill_1.InteractionSkillList,
    ...tool_skill_1.ToolSkillList,
    ...summon_skill_1.Summon,
};
// Is this more of a system than a component?
var SkillCategory;
(function (SkillCategory) {
    SkillCategory["MOVEMENT"] = "Movement";
    SkillCategory["MENU"] = "Menu";
    SkillCategory["COMBO"] = "Combo";
    SkillCategory["INTERACTION"] = "Interaction";
    SkillCategory["WEAPON"] = "Weapon";
    SkillCategory["CLASS"] = "Class";
    SkillCategory["DRIVE"] = "Drive";
    SkillCategory["PARTY"] = "Party";
    SkillCategory["GEAR"] = "Gear";
    SkillCategory["NATURAL"] = "Natural";
})(SkillCategory = exports.SkillCategory || (exports.SkillCategory = {}));
// TargetEffect.Action.Catch.Add(5);
// TargetEffect.Attribute.Power.Add(5%);
// // tags
// TargetEffect.Attribute.Life.Remove('10d8');
// TargetEffect.StatusEffect.Remove(Dizzy);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS5za2lsbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnQvYmFzZS5za2lsbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSwrQ0FBNkM7QUFDN0MsK0NBQTZDO0FBQzdDLCtDQUE2QztBQUM3QywyREFBeUQ7QUFDekQsNkNBQTJDO0FBQzNDLG1EQUFpRDtBQUNqRCwrQ0FBNkM7QUFDN0MsaURBQXNDO0FBQ3RDLHFEQUFtRDtBQUNuRCw2Q0FBMkM7QUFDM0MsNkNBQTJDO0FBQzNDLGlEQUErQztBQUUvQyxNQUFNLGVBQWUsR0FBRztJQUN0QixHQUFHLDhCQUFlO0lBQ2xCLEdBQUcsMEJBQWE7SUFDaEIsR0FBRyw0QkFBYztJQUNqQixHQUFHLDRCQUFjO0lBQ2pCLEdBQUcsNEJBQWM7SUFDakIsR0FBRyw0QkFBYztJQUNqQixHQUFHLGtDQUFpQjtJQUNwQixHQUFHLGdDQUFnQjtJQUNuQixHQUFHLDBCQUFhO0lBQ2hCLEdBQUcsd0NBQW9CO0lBQ3ZCLEdBQUcsMEJBQWE7SUFDaEIsR0FBRyxxQkFBTTtDQUNWLENBQUM7QUFHRiw2Q0FBNkM7QUFDN0MsSUFBWSxhQVdYO0FBWEQsV0FBWSxhQUFhO0lBQ3ZCLHNDQUFxQixDQUFBO0lBQ3JCLDhCQUFhLENBQUE7SUFDYixnQ0FBZSxDQUFBO0lBQ2YsNENBQTJCLENBQUE7SUFDM0Isa0NBQWlCLENBQUE7SUFDakIsZ0NBQWUsQ0FBQTtJQUNmLGdDQUFlLENBQUE7SUFDZixnQ0FBZSxDQUFBO0lBQ2YsOEJBQWEsQ0FBQTtJQUNiLG9DQUFtQixDQUFBO0FBQ3JCLENBQUMsRUFYVyxhQUFhLEdBQWIscUJBQWEsS0FBYixxQkFBYSxRQVd4QjtBQWlDRCxvQ0FBb0M7QUFDcEMsd0NBQXdDO0FBQ3hDLFVBQVU7QUFFViw4Q0FBOEM7QUFDOUMsMkNBQTJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBdHRyaWJ1dGV9IGZyb20gJy4vYXR0cmlidXRlJztcbmltcG9ydCB7Q2xhc3NTa2lsbExpc3R9IGZyb20gJy4vY2xhc3Muc2tpbGwnO1xuaW1wb3J0IHtDb21ib1NraWxsTGlzdH0gZnJvbSAnLi9jb21iby5za2lsbCc7XG5pbXBvcnQge0RyaXZlU2tpbGxMaXN0fSBmcm9tICcuL2RyaXZlLnNraWxsJztcbmltcG9ydCB7SW50ZXJhY3Rpb25Ta2lsbExpc3R9IGZyb20gJy4vaW50ZXJhY3Rpb24uc2tpbGwnO1xuaW1wb3J0IHtJdGVtU2tpbGxMaXN0fSBmcm9tICcuL2l0ZW0uc2tpbGwnO1xuaW1wb3J0IHtQYXNzaXZlU2tpbGxMaXN0fSBmcm9tICcuL3Bhc3NpdmUuc2tpbGwnO1xuaW1wb3J0IHtTcGVsbFNraWxsTGlzdH0gZnJvbSAnLi9zcGVsbC5za2lsbCc7XG5pbXBvcnQge1N1bW1vbn0gZnJvbSAnLi9zdW1tb24uc2tpbGwnO1xuaW1wb3J0IHtUZWFtd29ya1NraWxsTGlzdH0gZnJvbSAnLi90ZWFtd29yay5za2lsbCc7XG5pbXBvcnQge1Rvb2xTa2lsbExpc3R9IGZyb20gJy4vdG9vbC5za2lsbCc7XG5pbXBvcnQge1RyYXBTa2lsbExpc3R9IGZyb20gJy4vdHJhcC5za2lsbCc7XG5pbXBvcnQge1dlYXBvblNraWxsTGlzdH0gZnJvbSAnLi93ZWFwb24uc2tpbGwnO1xuXG5jb25zdCBNYXN0ZXJTa2lsbExpc3QgPSB7XG4gIC4uLldlYXBvblNraWxsTGlzdCxcbiAgLi4uVHJhcFNraWxsTGlzdCxcbiAgLi4uQ2xhc3NTa2lsbExpc3QsXG4gIC4uLkRyaXZlU2tpbGxMaXN0LFxuICAuLi5Db21ib1NraWxsTGlzdCxcbiAgLi4uU3BlbGxTa2lsbExpc3QsXG4gIC4uLlRlYW13b3JrU2tpbGxMaXN0LFxuICAuLi5QYXNzaXZlU2tpbGxMaXN0LFxuICAuLi5JdGVtU2tpbGxMaXN0LFxuICAuLi5JbnRlcmFjdGlvblNraWxsTGlzdCxcbiAgLi4uVG9vbFNraWxsTGlzdCxcbiAgLi4uU3VtbW9uLFxufTtcbmV4cG9ydCB0eXBlIE1hc3RlclNraWxsTGlzdFR5cGUgPSB0eXBlb2YgTWFzdGVyU2tpbGxMaXN0O1xuXG4vLyBJcyB0aGlzIG1vcmUgb2YgYSBzeXN0ZW0gdGhhbiBhIGNvbXBvbmVudD9cbmV4cG9ydCBlbnVtIFNraWxsQ2F0ZWdvcnkge1xuICBNT1ZFTUVOVCA9ICdNb3ZlbWVudCcsIC8vIGNoYW5nZXMgcG9zaXRpb25cbiAgTUVOVSA9ICdNZW51JywgLy8gYWN0aXZhdGVkIHZpYSBtZW51XG4gIENPTUJPID0gJ0NvbWJvJywgLy8gYWN0aXZhdGVkIHZpYSBjb21ib1xuICBJTlRFUkFDVElPTiA9ICdJbnRlcmFjdGlvbicsIC8vIGluIHJlbGF0aW9uIHRvIG9iamVjdFxuICBXRUFQT04gPSAnV2VhcG9uJyxcbiAgQ0xBU1MgPSAnQ2xhc3MnLFxuICBEUklWRSA9ICdEcml2ZScsXG4gIFBBUlRZID0gJ1BhcnR5JyxcbiAgR0VBUiA9ICdHZWFyJywgLy8gYXJlIHJlbGF0ZWQgdG8gdGhlIHVzZSBvZiBnZWFyXG4gIE5BVFVSQUwgPSAnTmF0dXJhbCcsIC8vICBhY3Rpb25zIHRoYXQgZG8gbm90IG5lZWQgdG8gYmUgY2FsbGVkIHRvIGJlIHVzZWQgPz8/IFRoZXNlIHNvdW5kIGxpa2UgdHJhaXRzIG9yIHNvbWV0aGluZz9cbn1cblxuLyoqXG4gKiBCYXNlU2tpbGxcbiAqIFNraWxscyBhcmUgZGVjb3VwbGVkIGZyb20gdGhlIGFjdG9yIGFuZCB0YXJnZXQuXG4gKiBTa2lsbHMgcmVmZXIgdG8gYWJpbGl0aWVzIHRoYXQgYXNzaWduZWQgdG8gY2hhcmFjdGVycy5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBCYXNlU2tpbGwge1xuICAvKipcbiAgICogVGhlIG5hbWUgaXMgdXNlZCB0byBpZGVudGlmeSB0aGUgc2tpbGxcbiAgICovXG4gIG5hbWU6IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIGRlc2NyaXB0aW9uIGV4cGxhaW5zIHRoZSBza2lsbCB0byB0aGUgcGxheWVyXG4gICAqL1xuICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIHRoZSBza2lsbCBtdXN0IGJlIGNhbmNlbGVkIG9yIGF1dG9tYXRpY2FsbHkgc3RvcCBiZWluZyBwZXJmb3JtZWRcbiAgICovXG4gIGZpeGVkPzogYm9vbGVhbjtcblxuICAvKipcbiAgICogU3RhbWluYSBCb29zdCBFbmFibGVkIEFjdGlvblxuICAgKiBCeSBob2xkaW5nIGRvd24gdGhlIGJ1dHRvbiB1c2VkIHRvIG1ha2UgdGhhdCBtb3ZlXG4gICAqIGEgcGxheWVyIG1heSBwbGFjZSBtb3JlIHN0YW1pbmEgaW50byB0aGUgbW92ZVxuICAgKiBtYWtpbmcgaXQgYSBtb3JlIHBvd2VyZnVsIGFjdGlvbi5cbiAgICogRm9yIGV2ZXJ5IDYgc2Vjb25kcywgY2hhcmFjdGVyIGdhaW5zIGEgcGx1cyAxIGZvciBleGFtcGxlLlxuICAgKi9cbiAgYm9vc3Rlcj86IEF0dHJpYnV0ZTtcbn1cblxuLy8gVGFyZ2V0RWZmZWN0LkFjdGlvbi5DYXRjaC5BZGQoNSk7XG4vLyBUYXJnZXRFZmZlY3QuQXR0cmlidXRlLlBvd2VyLkFkZCg1JSk7XG4vLyAvLyB0YWdzXG5cbi8vIFRhcmdldEVmZmVjdC5BdHRyaWJ1dGUuTGlmZS5SZW1vdmUoJzEwZDgnKTtcbi8vIFRhcmdldEVmZmVjdC5TdGF0dXNFZmZlY3QuUmVtb3ZlKERpenp5KTtcbiJdfQ==