"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SkillCategory = void 0;
const class_skill_1 = require("./class.skill");
const combo_skill_1 = require("./combo.skill");
const drive_skill_1 = require("./drive.skill");
const interaction_skill_1 = require("./interaction.skill");
const item_skill_1 = require("./item.skill");
const passive_skill_1 = require("./passive.skill");
const spell_skill_1 = require("./spell.skill");
const summon_skill_1 = require("./summon.skill");
const teamwork_skill_1 = require("./teamwork.skill");
const tool_skill_1 = require("./tool.skill");
const trap_skill_1 = require("./trap.skill");
const weapon_skill_1 = require("./weapon.skill");
const MasterSkillList = {
    ...weapon_skill_1.WeaponSkillList,
    ...trap_skill_1.TrapSkillList,
    ...class_skill_1.ClassSkillList,
    ...drive_skill_1.DriveSkillList,
    ...combo_skill_1.ComboSkillList,
    ...spell_skill_1.SpellSkillList,
    ...teamwork_skill_1.TeamworkSkillList,
    ...passive_skill_1.PassiveSkillList,
    ...item_skill_1.ItemSkillList,
    ...interaction_skill_1.InteractionSkillList,
    ...tool_skill_1.ToolSkillList,
    ...summon_skill_1.SummonSkillList,
};
// Is this more of a system than a component?
var SkillCategory;
(function (SkillCategory) {
    SkillCategory["MOVEMENT"] = "Movement";
    SkillCategory["MENU"] = "Menu";
    SkillCategory["COMBO"] = "Combo";
    SkillCategory["INTERACTION"] = "Interaction";
    SkillCategory["WEAPON"] = "Weapon";
    SkillCategory["CLASS"] = "Class";
    SkillCategory["DRIVE"] = "Drive";
    SkillCategory["PARTY"] = "Party";
    SkillCategory["GEAR"] = "Gear";
    SkillCategory["NATURAL"] = "Natural";
})(SkillCategory = exports.SkillCategory || (exports.SkillCategory = {}));
// TargetEffect.Action.Catch.Add(5);
// TargetEffect.Attribute.Power.Add(5%);
// // tags
// TargetEffect.Attribute.Life.Remove('10d8');
// TargetEffect.StatusEffect.Remove(Dizzy);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS5za2lsbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnQvYmFzZS5za2lsbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSwrQ0FBNkM7QUFDN0MsK0NBQTZDO0FBQzdDLCtDQUE2QztBQUM3QywyREFBeUQ7QUFDekQsNkNBQTJDO0FBQzNDLG1EQUFpRDtBQUNqRCwrQ0FBNkM7QUFDN0MsaURBQStDO0FBQy9DLHFEQUFtRDtBQUNuRCw2Q0FBMkM7QUFDM0MsNkNBQTJDO0FBQzNDLGlEQUErQztBQUUvQyxNQUFNLGVBQWUsR0FBRztJQUN0QixHQUFHLDhCQUFlO0lBQ2xCLEdBQUcsMEJBQWE7SUFDaEIsR0FBRyw0QkFBYztJQUNqQixHQUFHLDRCQUFjO0lBQ2pCLEdBQUcsNEJBQWM7SUFDakIsR0FBRyw0QkFBYztJQUNqQixHQUFHLGtDQUFpQjtJQUNwQixHQUFHLGdDQUFnQjtJQUNuQixHQUFHLDBCQUFhO0lBQ2hCLEdBQUcsd0NBQW9CO0lBQ3ZCLEdBQUcsMEJBQWE7SUFDaEIsR0FBRyw4QkFBZTtDQUNuQixDQUFDO0FBR0YsNkNBQTZDO0FBQzdDLElBQVksYUFXWDtBQVhELFdBQVksYUFBYTtJQUN2QixzQ0FBcUIsQ0FBQTtJQUNyQiw4QkFBYSxDQUFBO0lBQ2IsZ0NBQWUsQ0FBQTtJQUNmLDRDQUEyQixDQUFBO0lBQzNCLGtDQUFpQixDQUFBO0lBQ2pCLGdDQUFlLENBQUE7SUFDZixnQ0FBZSxDQUFBO0lBQ2YsZ0NBQWUsQ0FBQTtJQUNmLDhCQUFhLENBQUE7SUFDYixvQ0FBbUIsQ0FBQTtBQUNyQixDQUFDLEVBWFcsYUFBYSxHQUFiLHFCQUFhLEtBQWIscUJBQWEsUUFXeEI7QUFpQ0Qsb0NBQW9DO0FBQ3BDLHdDQUF3QztBQUN4QyxVQUFVO0FBRVYsOENBQThDO0FBQzlDLDJDQUEyQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXR0cmlidXRlfSBmcm9tICcuL2F0dHJpYnV0ZSc7XG5pbXBvcnQge0NsYXNzU2tpbGxMaXN0fSBmcm9tICcuL2NsYXNzLnNraWxsJztcbmltcG9ydCB7Q29tYm9Ta2lsbExpc3R9IGZyb20gJy4vY29tYm8uc2tpbGwnO1xuaW1wb3J0IHtEcml2ZVNraWxsTGlzdH0gZnJvbSAnLi9kcml2ZS5za2lsbCc7XG5pbXBvcnQge0ludGVyYWN0aW9uU2tpbGxMaXN0fSBmcm9tICcuL2ludGVyYWN0aW9uLnNraWxsJztcbmltcG9ydCB7SXRlbVNraWxsTGlzdH0gZnJvbSAnLi9pdGVtLnNraWxsJztcbmltcG9ydCB7UGFzc2l2ZVNraWxsTGlzdH0gZnJvbSAnLi9wYXNzaXZlLnNraWxsJztcbmltcG9ydCB7U3BlbGxTa2lsbExpc3R9IGZyb20gJy4vc3BlbGwuc2tpbGwnO1xuaW1wb3J0IHtTdW1tb25Ta2lsbExpc3R9IGZyb20gJy4vc3VtbW9uLnNraWxsJztcbmltcG9ydCB7VGVhbXdvcmtTa2lsbExpc3R9IGZyb20gJy4vdGVhbXdvcmsuc2tpbGwnO1xuaW1wb3J0IHtUb29sU2tpbGxMaXN0fSBmcm9tICcuL3Rvb2wuc2tpbGwnO1xuaW1wb3J0IHtUcmFwU2tpbGxMaXN0fSBmcm9tICcuL3RyYXAuc2tpbGwnO1xuaW1wb3J0IHtXZWFwb25Ta2lsbExpc3R9IGZyb20gJy4vd2VhcG9uLnNraWxsJztcblxuY29uc3QgTWFzdGVyU2tpbGxMaXN0ID0ge1xuICAuLi5XZWFwb25Ta2lsbExpc3QsXG4gIC4uLlRyYXBTa2lsbExpc3QsXG4gIC4uLkNsYXNzU2tpbGxMaXN0LFxuICAuLi5Ecml2ZVNraWxsTGlzdCxcbiAgLi4uQ29tYm9Ta2lsbExpc3QsXG4gIC4uLlNwZWxsU2tpbGxMaXN0LFxuICAuLi5UZWFtd29ya1NraWxsTGlzdCxcbiAgLi4uUGFzc2l2ZVNraWxsTGlzdCxcbiAgLi4uSXRlbVNraWxsTGlzdCxcbiAgLi4uSW50ZXJhY3Rpb25Ta2lsbExpc3QsXG4gIC4uLlRvb2xTa2lsbExpc3QsXG4gIC4uLlN1bW1vblNraWxsTGlzdCxcbn07XG5leHBvcnQgdHlwZSBNYXN0ZXJTa2lsbExpc3RUeXBlID0gdHlwZW9mIE1hc3RlclNraWxsTGlzdDtcblxuLy8gSXMgdGhpcyBtb3JlIG9mIGEgc3lzdGVtIHRoYW4gYSBjb21wb25lbnQ/XG5leHBvcnQgZW51bSBTa2lsbENhdGVnb3J5IHtcbiAgTU9WRU1FTlQgPSAnTW92ZW1lbnQnLCAvLyBjaGFuZ2VzIHBvc2l0aW9uXG4gIE1FTlUgPSAnTWVudScsIC8vIGFjdGl2YXRlZCB2aWEgbWVudVxuICBDT01CTyA9ICdDb21ibycsIC8vIGFjdGl2YXRlZCB2aWEgY29tYm9cbiAgSU5URVJBQ1RJT04gPSAnSW50ZXJhY3Rpb24nLCAvLyBpbiByZWxhdGlvbiB0byBvYmplY3RcbiAgV0VBUE9OID0gJ1dlYXBvbicsXG4gIENMQVNTID0gJ0NsYXNzJyxcbiAgRFJJVkUgPSAnRHJpdmUnLFxuICBQQVJUWSA9ICdQYXJ0eScsXG4gIEdFQVIgPSAnR2VhcicsIC8vIGFyZSByZWxhdGVkIHRvIHRoZSB1c2Ugb2YgZ2VhclxuICBOQVRVUkFMID0gJ05hdHVyYWwnLCAvLyAgYWN0aW9ucyB0aGF0IGRvIG5vdCBuZWVkIHRvIGJlIGNhbGxlZCB0byBiZSB1c2VkID8/PyBUaGVzZSBzb3VuZCBsaWtlIHRyYWl0cyBvciBzb21ldGhpbmc/XG59XG5cbi8qKlxuICogQmFzZVNraWxsXG4gKiBTa2lsbHMgYXJlIGRlY291cGxlZCBmcm9tIHRoZSBhY3RvciBhbmQgdGFyZ2V0LlxuICogU2tpbGxzIHJlZmVyIHRvIGFiaWxpdGllcyB0aGF0IGFzc2lnbmVkIHRvIGNoYXJhY3RlcnMuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQmFzZVNraWxsIHtcbiAgLyoqXG4gICAqIFRoZSBuYW1lIGlzIHVzZWQgdG8gaWRlbnRpZnkgdGhlIHNraWxsXG4gICAqL1xuICBuYW1lOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBkZXNjcmlwdGlvbiBleHBsYWlucyB0aGUgc2tpbGwgdG8gdGhlIHBsYXllclxuICAgKi9cbiAgZGVzY3JpcHRpb246IHN0cmluZztcblxuICAvKipcbiAgICogV2hldGhlciB0aGUgc2tpbGwgbXVzdCBiZSBjYW5jZWxlZCBvciBhdXRvbWF0aWNhbGx5IHN0b3AgYmVpbmcgcGVyZm9ybWVkXG4gICAqL1xuICBmaXhlZD86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFN0YW1pbmEgQm9vc3QgRW5hYmxlZCBBY3Rpb25cbiAgICogQnkgaG9sZGluZyBkb3duIHRoZSBidXR0b24gdXNlZCB0byBtYWtlIHRoYXQgbW92ZVxuICAgKiBhIHBsYXllciBtYXkgcGxhY2UgbW9yZSBzdGFtaW5hIGludG8gdGhlIG1vdmVcbiAgICogbWFraW5nIGl0IGEgbW9yZSBwb3dlcmZ1bCBhY3Rpb24uXG4gICAqIEZvciBldmVyeSA2IHNlY29uZHMsIGNoYXJhY3RlciBnYWlucyBhIHBsdXMgMSBmb3IgZXhhbXBsZS5cbiAgICovXG4gIGJvb3N0ZXI/OiBBdHRyaWJ1dGU7XG59XG5cbi8vIFRhcmdldEVmZmVjdC5BY3Rpb24uQ2F0Y2guQWRkKDUpO1xuLy8gVGFyZ2V0RWZmZWN0LkF0dHJpYnV0ZS5Qb3dlci5BZGQoNSUpO1xuLy8gLy8gdGFnc1xuXG4vLyBUYXJnZXRFZmZlY3QuQXR0cmlidXRlLkxpZmUuUmVtb3ZlKCcxMGQ4Jyk7XG4vLyBUYXJnZXRFZmZlY3QuU3RhdHVzRWZmZWN0LlJlbW92ZShEaXp6eSk7XG4iXX0=