"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Cup = void 0;
/**
 * A cup is a array containing collections
 */
class Cup extends Array {
    allocateBonuses(amount) {
        this.forEach((collection) => {
            amount = collection.allocateBonuses(amount);
        });
        return amount;
    }
    roll() {
        let value = 0;
        this.forEach((collection) => {
            // roll each collection
            collection.roll();
            if (collection.value !== undefined) {
                // get value without modifier and multiplier
                value += collection.value;
            }
        });
        return value;
    }
    get outcomePercent() {
        const values = [];
        this.forEach((collection) => {
            values.push(collection.outcomePercent);
        });
        return this._getAverage(values);
    }
    _getAverage(array) {
        let total = 0;
        for (let i = 0; i < array.length; i++) {
            total += array[i];
        }
        return total / array.length;
    }
}
exports.Cup = Cup;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3VwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0N1cC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFRQTs7R0FFRztBQUNILE1BQWEsR0FBSSxTQUFRLEtBQUs7SUFDbkIsZUFBZSxDQUFDLE1BQWM7UUFDakMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLFVBQXVCLEVBQUUsRUFBRTtZQUNyQyxNQUFNLEdBQUcsVUFBVSxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNoRCxDQUFDLENBQUMsQ0FBQztRQUNILE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFFTSxJQUFJO1FBQ1AsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLFVBQXVCLEVBQUUsRUFBRTtZQUNyQyx1QkFBdUI7WUFDdkIsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDO1lBRWxCLElBQUcsVUFBVSxDQUFDLEtBQUssS0FBSyxTQUFTLEVBQUM7Z0JBQzlCLDRDQUE0QztnQkFDN0MsS0FBSyxJQUFJLFVBQVUsQ0FBQyxLQUFLLENBQUM7YUFDNUI7UUFDTCxDQUFDLENBQUMsQ0FBQztRQUVILE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7SUFFRCxJQUFXLGNBQWM7UUFDckIsTUFBTSxNQUFNLEdBQWtCLEVBQUUsQ0FBQztRQUNqQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsVUFBdUIsRUFBRSxFQUFFO1lBQ3JDLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQzNDLENBQUMsQ0FBQyxDQUFDO1FBQ0gsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3BDLENBQUM7SUFFTyxXQUFXLENBQUMsS0FBb0I7UUFDcEMsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsS0FBSSxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDbEMsS0FBSyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNyQjtRQUNELE9BQU8sS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUM7SUFDaEMsQ0FBQztDQUNKO0FBdENELGtCQXNDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElDb2xsZWN0aW9uIH0gZnJvbSAnLi9Db2xsZWN0aW9uJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSUN1cCBleHRlbmRzIEFycmF5PElDb2xsZWN0aW9uPiB7XHJcbiAgICByb2xsKCk6IG51bWJlcjtcclxuICAgIGFsbG9jYXRlQm9udXNlcyhhbW91bnQ6IG51bWJlcik6IG51bWJlcjtcclxuICAgIGdldCBvdXRjb21lUGVyY2VudCgpOiBudW1iZXI7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBIGN1cCBpcyBhIGFycmF5IGNvbnRhaW5pbmcgY29sbGVjdGlvbnNcclxuICovXHJcbmV4cG9ydCBjbGFzcyBDdXAgZXh0ZW5kcyBBcnJheSBpbXBsZW1lbnRzIElDdXAge1xyXG4gICAgcHVibGljIGFsbG9jYXRlQm9udXNlcyhhbW91bnQ6IG51bWJlcik6IG51bWJlciB7XHJcbiAgICAgICAgdGhpcy5mb3JFYWNoKChjb2xsZWN0aW9uOiBJQ29sbGVjdGlvbikgPT4ge1xyXG4gICAgICAgICAgICBhbW91bnQgPSBjb2xsZWN0aW9uLmFsbG9jYXRlQm9udXNlcyhhbW91bnQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBhbW91bnQ7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHJvbGwoKTogbnVtYmVye1xyXG4gICAgICAgIGxldCB2YWx1ZSA9IDA7XHJcbiAgICAgICAgdGhpcy5mb3JFYWNoKChjb2xsZWN0aW9uOiBJQ29sbGVjdGlvbikgPT4ge1xyXG4gICAgICAgICAgICAvLyByb2xsIGVhY2ggY29sbGVjdGlvblxyXG4gICAgICAgICAgICBjb2xsZWN0aW9uLnJvbGwoKTtcclxuXHJcbiAgICAgICAgICAgIGlmKGNvbGxlY3Rpb24udmFsdWUgIT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgICAgICAgICAvLyBnZXQgdmFsdWUgd2l0aG91dCBtb2RpZmllciBhbmQgbXVsdGlwbGllclxyXG4gICAgICAgICAgICAgICB2YWx1ZSArPSBjb2xsZWN0aW9uLnZhbHVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0IG91dGNvbWVQZXJjZW50KCk6IG51bWJlciB7XHJcbiAgICAgICAgY29uc3QgdmFsdWVzOiBBcnJheTxudW1iZXI+ID0gW107XHJcbiAgICAgICAgdGhpcy5mb3JFYWNoKChjb2xsZWN0aW9uOiBJQ29sbGVjdGlvbikgPT4ge1xyXG4gICAgICAgICAgICB2YWx1ZXMucHVzaChjb2xsZWN0aW9uLm91dGNvbWVQZXJjZW50KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0QXZlcmFnZSh2YWx1ZXMpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgX2dldEF2ZXJhZ2UoYXJyYXk6IEFycmF5PG51bWJlcj4pOiBudW1iZXIge1xyXG4gICAgICAgIGxldCB0b3RhbCA9IDA7XHJcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHRvdGFsICs9IGFycmF5W2ldO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdG90YWwgLyBhcnJheS5sZW5ndGg7XHJcbiAgICB9XHJcbn1cclxuIl19