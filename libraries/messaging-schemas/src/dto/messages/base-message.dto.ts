import { kebabCase, truncate } from 'lodash';
import {
  IsUuidV4,
  IsDateString,
  IsBoolean,
} from '@cats-cradle/validation-schemas';
import { pascalCase } from './pascalCase';

export abstract class BaseMessageDto {
  @IsUuidV4()
  public messageId: string;

  @IsDateString()
  public timestamp: string;

  /**
   * Whether sent only for testing/debugging purposes
   * tests messages should not contaminate history long term
   */
  @IsBoolean()
  public test: boolean;

  /**
   * Get autogenerated SNS topic name
   * The name is prefixed by STAGE_NAME and contains the class name.
   * The topicName is static because it is invoked in stacks, etc. where there is no instance
   * {@link https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/quotas-messages.html}
   * {@link https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/quotas-queues.html}
   */
  static topicName(): string {
    const className = this.name;
    const classNameKebabCase = kebabCase(className);
    const stageName = (process.env.STAGE_NAME ?? 'default').toLowerCase();
    let topicName = truncate(`${stageName}-${classNameKebabCase}`, {
      length: 256 - '-topic'.length,
      omission: '-topic',
      separator: '-',
    });
    if (!/-topic$/.test(topicName)) {
      topicName += '-topic';
    }

    return topicName;
  }

  static displayName(): string {
    const className = this.name;
    const classNamePascalCase = pascalCase(className);
    const stageName = pascalCase(process.env.STAGE_NAME ?? 'default');
    let displayName = truncate(`${stageName}${classNamePascalCase}`, {
      length: 256 - 'Topic'.length,
      omission: 'Topic',
      separator: '',
    });
    if (!/Topic$/.test(displayName)) {
      displayName += 'Topic';
    }
    return displayName;
  }

  /**
   * Get auto generated SQS queue name
   * Prefixed by STAGE_NAME and APP_NAME followed by the message name with a queue suffix
   * {@link https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/quotas-messages.html}
   * {@link https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/quotas-queues.html}
   */
  get queueName(): string {
    const appName = (process.env.APP_NAME ?? 'undefined').toLowerCase();
    const className = this.constructor.name;
    const classNameKebabCase = kebabCase(className);
    const stageName = (process.env.STAGE_NAME ?? 'default').toLowerCase();
    let queueName = truncate(`${stageName}-${appName}-${classNameKebabCase}`, {
      length: 80 - '-queue'.length,
      omission: '-queue',
      separator: '-',
    });
    if (!/-queue$/.test(queueName)) {
      queueName += '-queue';
    }

    return queueName;
  }

  /**
   * Get auto generated topicArn
   * {@link https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html}
   * {@link https://docs.aws.amazon.com/IAM/latest/APIReference/API_User.html}
   */
  get topicArn(): string {
    const region = process.env.AWS_REGION;
    const account = process.env.AWS_ACCOUNT_ID;

    const stageName = (process.env.STAGE_NAME ?? 'default').toLowerCase();
    const className = this.constructor.name;
    const classNameKebabCase = kebabCase(className);
    let topicName = truncate(`${stageName}-${classNameKebabCase}`, {
      length: 256 - '-topic'.length,
      omission: '-topic',
      separator: '-',
    });
    if (!/-topic$/.test(topicName)) {
      topicName += '-topic';
    }

    return `arn:aws:sns:${region}:${account}:${topicName}`;
  }
}
