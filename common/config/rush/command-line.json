{
  "$schema": "https://developer.microsoft.com/json-schemas/rush/v5/command-line.schema.json",
  "commands": [
    {
      "name": "docs",
      "commandKind": "bulk",
      "summary": "Generates documents for each repo source.",
      "description": "Generates documents for each apps source using source code.",
      "enableParallelism": true,
      "ignoreMissingScript": false,
      "ignoreDependencyOrder": false,
      "allowWarningsInSuccessfulBuild": true
    },
    {
      "name": "prettier",
      "commandKind": "global",
      "summary": "Used by the pre-commit Git hook. This command invokes Prettier to reformat staged changes.",
      "safeForSimultaneousRushProcesses": true,
      "shellCommand": "pretty-quick --staged"
    },
    {
      "name": "branch-naming-policy",
      "commandKind": "global",
      "summary": "Check git branch name against git flow policy",
      "shellCommand": "common/scripts/git-scm/branch-naming-policy.sh",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "name": "sso",
      "commandKind": "global",
      "summary": "AWS SSO Authentication",
      "shellCommand": "common/scripts/aws-sso/aws-sso-login.sh",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "name": "nuke",
      "commandKind": "global",
      "summary": "Nuke all local changes",
      "shellCommand": "common/scripts/git-scm/nuke.sh",
      "safeForSimultaneousRushProcesses": false
    },
    {
      "name": "help",
      "commandKind": "global",
      "summary": "A list of common commands",
      "shellCommand": "common/scripts/help.sh",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "name": "api",
      "commandKind": "global",
      "summary": "Create OpenApi client libraries",
      "shellCommand": "common/scripts/api-client/build.sh",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "name": "build",
      "commandKind": "bulk",
      "summary": "Run build",
      "description": "Run build",
      "safeForSimultaneousRushProcesses": false,
      "ignoreMissingScript": true,
      "allowWarningsInSuccessfulBuild": true
    },
    {
      "name": "build:project",
      "commandKind": "bulk",
      "summary": "Run build:project",
      "description": "Run build:project to build all projects as individual dist separate from monorepo",
      "safeForSimultaneousRushProcesses": false,
      "ignoreMissingScript": true,
      "ignoreDependencyOrder": true,
      "enableParallelism": false,
      "allowWarningsInSuccessfulBuild": true
    },
    {
      "name": "test",
      "commandKind": "bulk",
      "summary": "Run unit tests",
      "description": "Run unit test this will not display coverage reports",
      "safeForSimultaneousRushProcesses": false,
      "ignoreMissingScript": true,
      "ignoreDependencyOrder": true,
      "enableParallelism": false,
      "allowWarningsInSuccessfulBuild": true
    },
    {
      "name": "cdk:bootstrap",
      "commandKind": "bulk",
      "summary": "Run cdk bootstrap",
      "description": "Run cdk bootstrap",
      "safeForSimultaneousRushProcesses": false,
      "ignoreMissingScript": true,
      "ignoreDependencyOrder": true,
      "enableParallelism": false,
      "allowWarningsInSuccessfulBuild": true
    },
    {
      "name": "cdk:diff",
      "commandKind": "bulk",
      "summary": "Run cdk diff",
      "description": "Run cdk diff",
      "safeForSimultaneousRushProcesses": false,
      "ignoreMissingScript": true,
      "ignoreDependencyOrder": true,
      "enableParallelism": false,
      "allowWarningsInSuccessfulBuild": true
    },    {
      "name": "cdk:synth",
      "commandKind": "bulk",
      "summary": "Run cdk synth",
      "description": "Run cdk synth",
      "safeForSimultaneousRushProcesses": false,
      "ignoreMissingScript": true,
      "ignoreDependencyOrder": true,
      "enableParallelism": false,
      "allowWarningsInSuccessfulBuild": true
    },    {
      "name": "cdk:deploy",
      "commandKind": "bulk",
      "summary": "Run cdk deploy",
      "description": "Run cdk deploy to upsert stacks on AWS",
      "safeForSimultaneousRushProcesses": false,
      "ignoreMissingScript": true,
      "ignoreDependencyOrder": true,
      "enableParallelism": false,
      "allowWarningsInSuccessfulBuild": true
    },
    {
      "name": "cdk:destroy",
      "commandKind": "bulk",
      "summary": "Run cdk destroyW",
      "description": "Run cdk destroy to remove stacks on AWS",
      "safeForSimultaneousRushProcesses": false,
      "ignoreMissingScript": true,
      "ignoreDependencyOrder": true,
      "enableParallelism": false,
      "allowWarningsInSuccessfulBuild": true
    },
    {
      "name": "test:cov",
      "commandKind": "bulk",
      "summary": "Run unit tests with coverage",
      "description": "Run unit test with coverage reports",
      "safeForSimultaneousRushProcesses": false,
      "ignoreMissingScript": true,
      "ignoreDependencyOrder": true,
      "enableParallelism": false,
      "allowWarningsInSuccessfulBuild": true
    },
    {
      "name": "lint",
      "commandKind": "bulk",
      "summary": "Run lint",
      "enableParallelism": true
    },
    {
      "name": "lint:ci",
      "commandKind": "bulk",
      "summary": "Run lint dry run",
      "enableParallelism": true
    }
  ],
  "parameters": [
    {
      "parameterKind": "choice",
      "longName": "--profile",
      "shortName": "-p",
      "description": "Select a AWS SSO profile",
      "alternatives": [
        {
          "name": "DeveloperSandbox",
          "description": "Developer sandbox access"
        },
        {
          "name": "ManagementAccount",
          "description": "Management Account access"
        },
        {
          "name": "tools",
          "description": "tools"
        }
      ],
      "defaultValue": "DeveloperSandbox",
      "associatedCommands": ["sso"]
    },
    {
      "parameterKind": "choice",
      "longName": "--require-approval",
      "description": "Whether to require manual approval for changes",
      "alternatives": [
        {
          "name": "never",
          "description": "never ask for manual approval"
        },
        {
          "name": "always",
          "description": "always ask for manual approval"
        }
      ],
      "defaultValue": "never",
      "associatedCommands": ["cdk:deploy"]
    }
  ]
}
