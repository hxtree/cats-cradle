# all library and platform dependencies MUST be published to npm BEFORE deploying
# services to S3 to ensure that dependencies are available.

name: Deploy Artifacts

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true
      AWS_ACCESS_KEY:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_BUCKET:
        required: true
      AWS_REGION:
        required: true

jobs:
  deploy:
    name: deploy
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:

      - name: checkout repository
        uses: actions/checkout@v3

      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: step-deployment-action
        with:
          token: ${{ secrets.GITHUB_TOKEN}}
          description: 'Upload AWS S3'
          environment: AWS CodePipeline

      - name: setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.18.0'

      - name: cache nx
        id: cache
        uses: actions/cache@v3.2.2
        with:
          path: common/temp
          key: ${{ runner.os }}-build-branch-${{ hashFiles('.nx/lockfile.hash') }}
          restore-keys: |
            ${{ runner.os }}-build-pr-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup git
        run: |
            git config user.name github-actions
            git config user.email github-actions@github.com

      - name: install pnpm needed for cdk NodeJsFunction esbuild
        run: npm install --global pnpm@8.13.1

      - name: package install
        run: pnpm install

      - name: nx build
        run: pnpm nx run-many -t build --all --output-style=static

      # publish dependencies prior to deploying to ensure that latest are avaliable
      - name: print environment Info
        run: pnpm nx report
        shell: bash

      - name: Publish to npmjs
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          pnpm publish --provenance --access public --no-git-checks --recursive
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # deploy project for pipeline
      - name: nx artifact
        run: pnpm nx run-many -t artifact --all

      - uses: shallwefootball/s3-upload-action@master
        name: Upload S3
        id: S3
        with:
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: 'dist'
          destination_dir: ''
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target_url: https://aws-bucket.s3.ap-northeast-2.amazonaws.com/${{steps.S3.outputs.object_key}}/index.html
          state: 'success'
          deployment_id: ${{ steps.step-deployment-action.outputs.deployment_id }}